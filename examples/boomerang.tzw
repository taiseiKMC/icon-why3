scope Unknown

  predicate pre (_c : ctx) = true

  predicate post (c : ctx) (c' : ctx) =
    c.boomerang_balance = c'.boomerang_balance /\
    ICon.Contract.Default = ICon.Contract.Default

  scope Entrypoint

  predicate default unit

  end

end

scope Boomerang

  type storage [@gen_wf] = unit

  predicate pre (_st : step) (_gp : gparam) (_c : ctx) = true

  predicate post (_st : step) (_gp : gparam) (c : ctx) (c' : ctx) = inv_post c c'

  let upper_ops = 1

  scope Spec

  predicate default (st : step) (_p : unit) (_s : storage) (ops : list operation) (_s' : storage) =
    (st.amount = 0 -> ops = Nil) /\
    (st.amount > 0 -> ops = Cons (Xfer (ICon.Gp (() : unit)) st.amount (ICon.Contract st.sender)) Nil)
  end

end
